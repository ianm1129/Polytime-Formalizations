import Mathlib.Algebra.Order.Monoid.Basic
import Mathlib.Control.Monad.Writer
import Mathlib.Data.PFunctor.Multivariate.Basic




-- import Mathlib.Order.Preorder

#check Writer

-- First argument should be cost-monoid, for our purposes nats

-- Take a look at monads, understood what a monad is, understand return
-- bind for the writer monad

-- Task: write a program, instrumented with cost. Something like foldl, perhaps insertion-sort

-- Free Monad / Think about privacy



-- Big idea: prove some things about oracle comp-like

-- Provide step.agda postulates as fields in type class  ??

-- Put in oracle function as part of typeclass, but since we're porting calf over,
-- spend effort making pure, bind, step (maybe positive or negative types)



